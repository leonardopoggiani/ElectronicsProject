library STD;
use STD.standard.all;
use STD.textio.all;

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use IEEE.std_logic_arith.all;
use ieee.std_logic_arith.UNSIGNED;
use IEEE.std_logic_signed.all;
use IEEE.math_real.all;
use IEEE.math_complex.all;
use IEEE.std_logic_textio.all;
library WORK;

entity iir is
port(
 clk : in std_logic;
 x : in std_logic_vector(15 downto 0);
 y : buffer std_logic_vector(15 downto 0));
end iir;

architecture arch_iir of iir is
signal temp : unsigned(15 downto 0) := (others => '0');
begin
process (clk)
begin
 if rising_edge(clk) then
out_data <= std_logic_vector(unsigned(in_data) + temp);
 end if;
 if falling_edge(clk) then
temp <= unsigned(out_data)/2;
 end if;
end process;
end arch_iir;
